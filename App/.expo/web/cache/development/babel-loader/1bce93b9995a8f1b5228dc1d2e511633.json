{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { styles } from \"./style.js\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Input, Text } from 'react-native-elements';\nimport * as Facebook from \"expo-facebook\";\nexport function Cadastro(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var signUpFacebook = function signUpFacebook() {\n    var _await$Facebook$logIn, type, token, response, data, message;\n\n    return _regeneratorRuntime.async(function signUpFacebook$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync(\"Your-App-ID\"));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n              permissions: [\"public_profile\", \"email\"]\n            }));\n\n          case 5:\n            _await$Facebook$logIn = _context.sent;\n            type = _await$Facebook$logIn.type;\n            token = _await$Facebook$logIn.token;\n\n            if (!(type === \"success\")) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?fields=id,name,picture.type(large),email&access_token=\" + token));\n\n          case 11:\n            response = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 14:\n            data = _context.sent;\n            setUser(data);\n            _context.next = 18;\n            break;\n\n          case 18:\n            _context.next = 24;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](0);\n            message = _context.t0.message;\n            alert(\"Facebook Login Error: \" + message);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 20]], Promise);\n  };\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorEmail = _useState6[0],\n      setErrorEmail = _useState6[1];\n\n  var _React$useState = React.useState('first'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cpf = _useState8[0],\n      setCpf = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorCpf = _useState10[0],\n      setErrorCpf = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nome = _useState12[0],\n      setNome = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errorNome = _useState14[0],\n      setErrorNome = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      senha = _useState16[0],\n      setSenha = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      errorSenha = _useState18[0],\n      setErrorSenha = _useState18[1];\n\n  var validar = function validar() {\n    var error = false;\n    setErrorEmail(null);\n    var regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regexEmail.test(String(email).toLowerCase())) {\n      setErrorEmail(\"Preencha seu e-mail corretamente\");\n      error = true;\n    }\n\n    setErrorCpf(null);\n    var regexCPF = /^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/;\n\n    if (!regexCPF.test(cpf)) {\n      setErrorCpf(\"Preencha seu CPF corretamente\");\n      error = true;\n    }\n\n    setErrorNome(null);\n    var regexNome = /[^a-zà-ú]/gi;\n\n    if (!regexNome.test(nome)) {\n      setErrorNome(\"Por favor preencha todos os campos\");\n      error = true;\n    }\n\n    setErrorSenha(null);\n    var regexSenha = /^[a-z0-9_-]/;\n\n    if (!regexSenha.test(senha)) {\n      setErrorSenha(\"Por favor preencha todos os campos\");\n      error = true;\n    }\n\n    return !error;\n  };\n\n  var salvarDados = function salvarDados() {\n    if (validar()) {\n      console.log(\"Salvou\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.isBackgroundGeneral\n  }, React.createElement(Text, null, \"Nome:\"), React.createElement(Input, {\n    keyboardType: \"default\",\n    placeholder: \"Maria dos Santos\",\n    onChangeText: function onChangeText(value) {\n      return setNome(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorNome\n  }), React.createElement(Text, null, \"CPF:\"), React.createElement(Input, {\n    keyboardType: \"number-pad\",\n    placeholder: \"142.832.344-24\",\n    onChangeText: function onChangeText(value) {\n      return setCpf(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorCpf\n  }), React.createElement(Text, null, \"Email:\"), React.createElement(Input, {\n    placeholder: \"receitas12@gmail.com\",\n    onChangeText: function onChangeText(value) {\n      setEmail(value);\n      setErrorEmail(null);\n    },\n    errorMessage: errorEmail\n  }), React.createElement(Text, null, \"Senha:\"), React.createElement(Input, {\n    placeholder: \"Digite sua senha\",\n    onChangeText: function onChangeText(value) {\n      setSenha(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorSenha\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return salvarDados();\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    }\n  }, \" Cadastrar \")), React.createElement(View, {\n    style: styless.container\n  }, user ? React.createElement(View, {\n    style: styless.fotoContainer\n  }, React.createElement(Image, {\n    style: styless.image,\n    source: {\n      uri: user.picture.data.url\n    }\n  }), React.createElement(Text, {\n    style: styless.text\n  }, user.name), React.createElement(Text, {\n    style: styless.text\n  }, user.email)) : React.createElement(Button, {\n    title: \"Login\",\n    onPress: signUpFacebook\n  })));\n}\nvar styless = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f4f4f4\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  fotoContainer: {},\n  image: {\n    width: 200,\n    height: 200\n  },\n  text: {\n    fontSize: 18,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/kenys/Desktop/testepro1/Projetao-IFAL-2021/App/src/Screens/Cadastro/index.js"],"names":["React","useState","styles","Input","Text","Facebook","Cadastro","navigation","user","setUser","signUpFacebook","initializeAsync","logInWithReadPermissionsAsync","permissions","type","token","fetch","response","json","data","message","alert","email","setEmail","errorEmail","setErrorEmail","value","setValue","cpf","setCpf","errorCpf","setErrorCpf","nome","setNome","errorNome","setErrorNome","senha","setSenha","errorSenha","setErrorSenha","validar","error","regexEmail","test","String","toLowerCase","regexCPF","regexNome","regexSenha","salvarDados","console","log","isBackgroundGeneral","button","color","styless","container","fotoContainer","image","uri","picture","url","text","name","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\r\nimport { styles } from './style.js';\r\nimport { TouchableOpacity, View, Button, Image, StyleSheet } from 'react-native';\r\nimport { Input, Text } from 'react-native-elements';\r\nimport * as Facebook from \"expo-facebook\";\r\n\r\n\r\nexport function Cadastro({navigation}) {\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  const signUpFacebook = async () => {\r\n    try {\r\n      await Facebook.initializeAsync(\"Your-App-ID\");\r\n      const { type, token } = await Facebook.logInWithReadPermissionsAsync({\r\n        permissions: [\"public_profile\", \"email\"],\r\n      });\r\n      if (type === \"success\") {\r\n        // Get the user's name using Facebook's Graph API\r\n        const response = await fetch(\r\n          `https://graph.facebook.com/me?fields=id,name,picture.type(large),email&access_token=${token}`\r\n        );\r\n        // console.log((await response.json()).name);\r\n        const data = await response.json();\r\n        setUser(data);\r\n      } else {\r\n        // type === 'cancel'\r\n      }\r\n    } catch ({ message }) {\r\n      alert(`Facebook Login Error: ${message}`);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //email\r\n  const [email, setEmail] = useState(null)\r\n  const [errorEmail, setErrorEmail] = useState(null)\r\n\r\n  //picker\r\n  const [value, setValue] = React.useState('first');\r\n\r\n  //CPF\r\n  const [cpf, setCpf] = useState(null)\r\n  const [errorCpf, setErrorCpf] = useState(null)\r\n\r\n  //Nome\r\n  const [nome, setNome] = useState(null)\r\n  const [errorNome, setErrorNome] = useState(null)\r\n\r\n  //Senha\r\n  const [senha, setSenha] = useState(null)\r\n  const [errorSenha, setErrorSenha] = useState(null)\r\n\r\n  const validar = () => {\r\n    let error = false\r\n\r\n   \r\n\r\n    // Validando Email\r\n    setErrorEmail(null)\r\n    const regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    if (!regexEmail.test(String(email).toLowerCase())){\r\n      setErrorEmail(\"Preencha seu e-mail corretamente\")\r\n      error = true\r\n    }\r\n\r\n  // Validando CPF\r\n    setErrorCpf(null)\r\n    const regexCPF =/^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/\r\n    if (!regexCPF.test(cpf)){\r\n      setErrorCpf(\"Preencha seu CPF corretamente\")\r\n      error = true\r\n    }\r\n    \r\n\r\n    // validando Nome\r\n    setErrorNome(null)\r\n    const regexNome= /[^a-zà-ú]/gi\r\n    if (!regexNome.test(nome)) {\r\n      setErrorNome(\"Por favor preencha todos os campos\")\r\n      error = true\r\n    }\r\n\r\n    // validando Senha\r\n    setErrorSenha(null)\r\n    const regexSenha= /^[a-z0-9_-]/\r\n    if (!regexSenha.test(senha)) {\r\n      setErrorSenha(\"Por favor preencha todos os campos\")\r\n      error = true\r\n    }\r\n\r\n    return !error\r\n  }\r\n\r\n  const salvarDados = () => {\r\n    if(validar()) {\r\n      console.log(\"Salvou\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.isBackgroundGeneral}>\r\n\r\n      {/* Italo */}\r\n      <Text>Nome:</Text>\r\n      <Input\r\n          keyboardType=\"default\" \r\n          placeholder=\"Maria dos Santos\" \r\n          onChangeText={value => setNome(value)}\r\n          returnKeyType=\"done\" \r\n          errorMessage={errorNome}\r\n      />\r\n\r\n      {/* Italo */}\r\n      <Text>CPF:</Text>\r\n      <Input \r\n          keyboardType=\"number-pad\" \r\n          placeholder=\"142.832.344-24\" \r\n          onChangeText={value => setCpf(value)}\r\n          returnKeyType=\"done\" \r\n          errorMessage={errorCpf}\r\n      />\r\n\r\n      {/*Kenysson*/}\r\n      <Text>Email:</Text>\r\n      <Input\r\n            placeholder=\"receitas12@gmail.com\"\r\n            onChangeText={value => {\r\n                setEmail(value)\r\n                setErrorEmail(null)\r\n            }}\r\n            \r\n            errorMessage={errorEmail}        \r\n        />\r\n\r\n      <Text>Senha:</Text>\r\n      <Input\r\n            placeholder=\"Digite sua senha\"\r\n            onChangeText = {value => {\r\n              setSenha(value)\r\n            }}\r\n            returnKeyType=\"done\"\r\n            errorMessage={errorSenha}      \r\n        />\r\n\r\n    <TouchableOpacity style={styles.button} onPress={() => salvarDados()}>\r\n        <Text style={{color:\"#fff\"}}> Cadastrar </Text>\r\n    </TouchableOpacity>\r\n\r\n    <View style={styless.container}>\r\n      {user ? (\r\n        <View style={styless.fotoContainer}>\r\n          <Image style={styless.image} source={{ uri: user.picture.data.url }} />\r\n          <Text style={styless.text}>{user.name}</Text>\r\n          <Text style={styless.text}>{user.email}</Text>\r\n        </View>\r\n      ) : (\r\n        <Button title=\"Login\" onPress={signUpFacebook} />\r\n      )}\r\n    </View>\r\n    \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styless = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f4f4f4\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fotoContainer: {},\r\n  image: { width: 200, height: 200 },\r\n  text: { fontSize: 18, textAlign: \"center\" },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}