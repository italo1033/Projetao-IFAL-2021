{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { styles } from \"./style.js\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Text } from 'react-native-elements';\nimport { RadioButton } from 'react-native-paper';\nimport { DatePicker } from \"../../Components/DatePicker\";\nexport function Cadastro(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorEmail = _useState4[0],\n      setErrorEmail = _useState4[1];\n\n  var _React$useState = React.useState('first'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cpf = _useState6[0],\n      setCpf = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorCpf = _useState8[0],\n      setErrorCpf = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nome = _useState10[0],\n      setNome = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorNome = _useState12[0],\n      setErrorNome = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      senha = _useState14[0],\n      setSenha = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      errorSenha = _useState16[0],\n      setErrorSenha = _useState16[1];\n\n  var validar = function validar() {\n    var error = false;\n    setErrorEmail(null);\n    var regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regexEmail.test(String(email).toLowerCase())) {\n      setErrorEmail(\"Preencha seu e-mail corretamente\");\n      error = true;\n    }\n\n    setErrorCpf(null);\n    var regexCPF = /^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/;\n\n    if (!regexCPF.test(cpf)) {\n      setErrorCpf(\"Preencha seu CPF corretamente\");\n      error = true;\n    }\n\n    setErrorNome(null);\n    var regexNome = /[^a-zà-ú]/gi;\n\n    if (!regexNome.test(nome)) {\n      setErrorNome(\"Por favor preencha todos os campos\");\n      error = true;\n    }\n\n    setErrorSenha(null);\n    var regexSenha = /^[a-z0-9_-]/;\n\n    if (!regexSenha.test(senha)) {\n      setErrorSenha(\"Por favor preencha todos os campos\");\n      error = true;\n    }\n\n    return !error;\n  };\n\n  var salvarDados = function salvarDados() {\n    if (validar()) {\n      console.log(\"Salvou\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.isBackgroundGeneral\n  }, React.createElement(Text, null, \"Nome:\"), React.createElement(Input, {\n    keyboardType: \"default\",\n    placeholder: \"Maria dos Santos\",\n    onChangeText: function onChangeText(value) {\n      return setNome(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorNome,\n    testID: \"Input\"\n  }), React.createElement(Text, null, \"CPF:\"), React.createElement(Input, {\n    keyboardType: \"number-pad\",\n    placeholder: \"142.832.344-24\",\n    onChangeText: function onChangeText(value) {\n      return setCpf(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorCpf\n  }), React.createElement(Text, null, \"Email:\"), React.createElement(Input, {\n    placeholder: \"receitas12@gmail.com\",\n    onChangeText: function onChangeText(value) {\n      setEmail(value);\n      setErrorEmail(null);\n    },\n    errorMessage: errorEmail\n  }), React.createElement(Text, null, \"Senha:\"), React.createElement(Input, {\n    placeholder: \"Digite sua senha\",\n    onChangeText: function onChangeText(value) {\n      setSenha(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorSenha\n  }), React.createElement(DatePicker, null), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return salvarDados();\n    },\n    \"data-testid\": \"form-btn\"\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    }\n  }, \" Cadastrar \")));\n}","map":{"version":3,"sources":["/home/italo/Projetao-IFAL-2021/App/src/Screens/Cadastro/index.js"],"names":["React","useState","styles","Input","Text","RadioButton","DatePicker","Cadastro","navigation","email","setEmail","errorEmail","setErrorEmail","value","setValue","cpf","setCpf","errorCpf","setErrorCpf","nome","setNome","errorNome","setErrorNome","senha","setSenha","errorSenha","setErrorSenha","validar","error","regexEmail","test","String","toLowerCase","regexCPF","regexNome","regexSenha","salvarDados","console","log","isBackgroundGeneral","button","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT;;;AAEA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,uBAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAAQC,UAAR;AAGA,OAAO,SAASC,QAAT,OAAgC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAGrC,kBAA0BP,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAoCT,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOU,UAAP;AAAA,MAAmBC,aAAnB;;AAGA,wBAA0BZ,KAAK,CAACC,QAAN,CAAe,OAAf,CAA1B;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AAGA,mBAAsBb,QAAQ,CAAC,IAAD,CAA9B;AAAA;AAAA,MAAOc,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAAgCf,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOgB,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,mBAAwBjB,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AACA,oBAAkCnB,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOoB,SAAP;AAAA,MAAkBC,YAAlB;;AAGA,oBAA0BrB,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOsB,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAoCvB,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOwB,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAIC,KAAK,GAAG,KAAZ;AAKAhB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMiB,UAAU,GAAG,yJAAnB;;AACA,QAAI,CAACA,UAAU,CAACC,IAAX,CAAgBC,MAAM,CAACtB,KAAD,CAAN,CAAcuB,WAAd,EAAhB,CAAL,EAAkD;AAChDpB,MAAAA,aAAa,CAAC,kCAAD,CAAb;AACAgB,MAAAA,KAAK,GAAG,IAAR;AACD;;AAGDV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,QAAMe,QAAQ,GAAE,8BAAhB;;AACA,QAAI,CAACA,QAAQ,CAACH,IAAT,CAAcf,GAAd,CAAL,EAAwB;AACtBG,MAAAA,WAAW,CAAC,+BAAD,CAAX;AACAU,MAAAA,KAAK,GAAG,IAAR;AACD;;AAIDN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAMY,SAAS,GAAE,aAAjB;;AACA,QAAI,CAACA,SAAS,CAACJ,IAAV,CAAeX,IAAf,CAAL,EAA2B;AACzBG,MAAAA,YAAY,CAAC,oCAAD,CAAZ;AACAM,MAAAA,KAAK,GAAG,IAAR;AACD;;AAGDF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMS,UAAU,GAAE,aAAlB;;AACA,QAAI,CAACA,UAAU,CAACL,IAAX,CAAgBP,KAAhB,CAAL,EAA6B;AAC3BG,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACAE,MAAAA,KAAK,GAAG,IAAR;AACD;;AAED,WAAO,CAACA,KAAR;AACD,GAvCD;;AAyCA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAGT,OAAO,EAAV,EAAc;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,GAJD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,MAAM,CAACqC;AAApB,KAGE,oBAAC,IAAD,gBAHF,EAIE,oBAAC,KAAD;AACI,IAAA,YAAY,EAAC,SADjB;AAEI,IAAA,WAAW,EAAC,kBAFhB;AAGI,IAAA,YAAY,EAAE,sBAAA1B,KAAK;AAAA,aAAIO,OAAO,CAACP,KAAD,CAAX;AAAA,KAHvB;AAII,IAAA,aAAa,EAAC,MAJlB;AAKI,IAAA,YAAY,EAAEQ,SALlB;AAMI,IAAA,MAAM,EAAC;AANX,IAJF,EAcE,oBAAC,IAAD,eAdF,EAeE,oBAAC,KAAD;AACI,IAAA,YAAY,EAAC,YADjB;AAEI,IAAA,WAAW,EAAC,gBAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAR,KAAK;AAAA,aAAIG,MAAM,CAACH,KAAD,CAAV;AAAA,KAHvB;AAII,IAAA,aAAa,EAAC,MAJlB;AAKI,IAAA,YAAY,EAAEI;AALlB,IAfF,EAwBE,oBAAC,IAAD,iBAxBF,EAyBE,oBAAC,KAAD;AACM,IAAA,WAAW,EAAC,sBADlB;AAEM,IAAA,YAAY,EAAE,sBAAAJ,KAAK,EAAI;AACnBH,MAAAA,QAAQ,CAACG,KAAD,CAAR;AACAD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KALP;AAOM,IAAA,YAAY,EAAED;AAPpB,IAzBF,EAmCE,oBAAC,IAAD,iBAnCF,EAoCE,oBAAC,KAAD;AACM,IAAA,WAAW,EAAC,kBADlB;AAEM,IAAA,YAAY,EAAI,sBAAAE,KAAK,EAAI;AACvBW,MAAAA,QAAQ,CAACX,KAAD,CAAR;AACD,KAJP;AAKM,IAAA,aAAa,EAAC,MALpB;AAMM,IAAA,YAAY,EAAEY;AANpB,IApCF,EA6CE,oBAAC,UAAD,OA7CF,EA+CA,oBAAC,gBAAD;AACA,IAAA,KAAK,EAAEvB,MAAM,CAACsC,MADd;AAEA,IAAA,OAAO,EAAE;AAAA,aAAMJ,WAAW,EAAjB;AAAA,KAFT;AAGA,mBAAY;AAHZ,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAC;AAAP;AAAb,mBALJ,CA/CA,CADF;AA0DD","sourcesContent":["import React, { useState }  from 'react';\nimport { styles } from './style.js';\nimport { TouchableOpacity, View } from 'react-native';\nimport { Input, Text } from 'react-native-elements';\nimport { RadioButton } from 'react-native-paper';\nimport {DatePicker} from '../../Components/DatePicker'\n\n\nexport function Cadastro({navigation}) {\n\n  //email\n  const [email, setEmail] = useState(null)\n  const [errorEmail, setErrorEmail] = useState(null)\n\n  //picker\n  const [value, setValue] = React.useState('first');\n\n  //CPF\n  const [cpf, setCpf] = useState(null)\n  const [errorCpf, setErrorCpf] = useState(null)\n\n  //Nome\n  const [nome, setNome] = useState(null)\n  const [errorNome, setErrorNome] = useState(null)\n\n  //Senha\n  const [senha, setSenha] = useState(null)\n  const [errorSenha, setErrorSenha] = useState(null)\n\n  const validar = () => {\n    let error = false\n\n\n\n    // Validando Email\n    setErrorEmail(null)\n    const regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    if (!regexEmail.test(String(email).toLowerCase())){\n      setErrorEmail(\"Preencha seu e-mail corretamente\")\n      error = true\n    }\n\n  // Validando CPF\n    setErrorCpf(null)\n    const regexCPF =/^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/\n    if (!regexCPF.test(cpf)){\n      setErrorCpf(\"Preencha seu CPF corretamente\")\n      error = true\n    }\n    \n\n    // validando Nome\n    setErrorNome(null)\n    const regexNome= /[^a-zà-ú]/gi\n    if (!regexNome.test(nome)) {\n      setErrorNome(\"Por favor preencha todos os campos\")\n      error = true\n    }\n\n    // validando Senha\n    setErrorSenha(null)\n    const regexSenha= /^[a-z0-9_-]/\n    if (!regexSenha.test(senha)) {\n      setErrorSenha(\"Por favor preencha todos os campos\")\n      error = true\n    }\n\n    return !error\n  }\n\n  const salvarDados = () => {\n    if(validar()) {\n      console.log(\"Salvou\")\n    }\n  }\n\n\n  return (\n    <View style={styles.isBackgroundGeneral}>\n\n      {/* Italo */}\n      <Text>Nome:</Text>\n      <Input\n          keyboardType=\"default\" \n          placeholder=\"Maria dos Santos\" \n          onChangeText={value => setNome(value)}\n          returnKeyType=\"done\" \n          errorMessage={errorNome}\n          testID=\"Input\"\n      />\n\n      {/* Italo */}\n      <Text>CPF:</Text>\n      <Input \n          keyboardType=\"number-pad\" \n          placeholder=\"142.832.344-24\" \n          onChangeText={value => setCpf(value)}\n          returnKeyType=\"done\" \n          errorMessage={errorCpf}\n      />\n\n      {/*Kenysson*/}\n      <Text>Email:</Text>\n      <Input\n            placeholder=\"receitas12@gmail.com\"\n            onChangeText={value => {\n                setEmail(value)\n                setErrorEmail(null)\n            }}\n            \n            errorMessage={errorEmail}        \n        />\n\n      <Text>Senha:</Text>\n      <Input\n            placeholder=\"Digite sua senha\"\n            onChangeText = {value => {\n              setSenha(value)\n            }}\n            returnKeyType=\"done\"\n            errorMessage={errorSenha}      \n        />\n\n      <DatePicker />\n\n    <TouchableOpacity \n    style={styles.button} \n    onPress={() => salvarDados()}\n    data-testid=\"form-btn\"\n    >\n        <Text style={{color:\"#fff\"}}> Cadastrar </Text>\n    </TouchableOpacity>\n    \n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}