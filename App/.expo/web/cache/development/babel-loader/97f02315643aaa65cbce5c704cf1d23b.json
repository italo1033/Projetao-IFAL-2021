{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { styles } from \"./style.js\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button, Text } from 'react-native-elements';\nimport { RadioButton } from 'react-native-paper';\nexport function Cadastro(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      validationContato = _useState2[0],\n      setValidationContato = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contato = _useState4[0],\n      setContato = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorEmail = _useState8[0],\n      setErrorEmail = _useState8[1];\n\n  var _React$useState = React.useState('first'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var validar = function validar() {\n    var error = false;\n    setValidationContato(null);\n    var regex = /^\\(\\d{2}\\) \\d{4,5}-\\d{4}$/gi;\n\n    if (!regex.test(contato)) {\n      setValidationContato(\"Preencha seu contato\");\n      error = true;\n    }\n\n    setErrorEmail(null);\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(String(email).toLowerCase())) {\n      setErrorEmail(\"Preencha seu e-mail corretamente\");\n      error = true;\n    }\n\n    return !error;\n  };\n\n  var salvarDados = function salvarDados() {\n    if (validar()) {\n      console.log(\"Salvou\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.isBackgroundGeneral\n  }, React.createElement(Text, null, \"Contato:\"), React.createElement(Input, {\n    keyboardType: \"phone-pad\",\n    placeholder: \"Contato\",\n    onChangeText: function onChangeText(value) {\n      setContato(value);\n      setValidationContato(null);\n    },\n    returnKeyType: \"done\",\n    errorMessage: validationContato\n  }), React.createElement(Text, null, \"Complemento:\"), React.createElement(Input, {\n    keyboardType: \"default\",\n    placeholder: \"Complemento\",\n    returnKeyType: \"done\"\n  }), React.createElement(RadioButton.Group, {\n    onValueChange: function onValueChange(newValue) {\n      return setValue(newValue);\n    },\n    value: value\n  }, React.createElement(View, null, React.createElement(Text, null, \"Masculino\"), React.createElement(RadioButton, {\n    value: \"first\"\n  })), React.createElement(View, null, React.createElement(Text, null, \"Feminino\"), React.createElement(RadioButton, {\n    value: \"second\"\n  }))), React.createElement(Input, {\n    placeholder: \"E-mail\",\n    onChangeText: function onChangeText(value) {\n      setEmail(value);\n      setErrorEmail(null);\n    },\n    keyboardType: \"email-address\",\n    errorMessage: errorEmail\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return salvarDados();\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    }\n  }, \" Cadastrar \")));\n}","map":{"version":3,"sources":["/home/italo/Projetao-IFAL-2021/App/src/Screens/Cadastro/index.js"],"names":["React","useState","styles","Input","Button","Text","RadioButton","Cadastro","navigation","validationContato","setValidationContato","contato","setContato","email","setEmail","errorEmail","setErrorEmail","value","setValue","validar","error","regex","test","re","String","toLowerCase","salvarDados","console","log","isBackgroundGeneral","newValue","button","color"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { styles } from './style.js';\nimport { TouchableOpacity, View } from 'react-native';\nimport { Input, Button, Text } from 'react-native-elements';\nimport { RadioButton } from 'react-native-paper';\n\n\nexport function Cadastro({navigation}) {\n\n\n  //Contato\n  const [ validationContato, setValidationContato ] = useState(null);\n  const [ contato, setContato ] = useState(null);\n\n  //email\n  const [email, setEmail] = useState(null)\n  const [errorEmail, setErrorEmail] = useState(null)\n\n  //picler\n  const [value, setValue] = React.useState('first');\n\n\n  const validar = () => {\n    let error = false\n    setValidationContato(null)\n\n    const regex = /^\\(\\d{2}\\) \\d{4,5}-\\d{4}$/gi;\n    if(!regex.test(contato)) {\n      setValidationContato(\"Preencha seu contato\")\n      error = true\n    }\n\n\n    setErrorEmail(null)\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    if (!re.test(String(email).toLowerCase())){\n      setErrorEmail(\"Preencha seu e-mail corretamente\")\n      error = true\n    }\n\n    return !error\n  }\n\n  const salvarDados = () => {\n    if(validar()) {\n      console.log(\"Salvou\")\n    }\n  }\n  return (\n    <View style={styles.isBackgroundGeneral}>\n\n      {/*Lara Fernanda*/}\n      <Text>Contato:</Text>\n      <Input \n      keyboardType=\"phone-pad\" \n      placeholder=\"Contato\" \n      onChangeText={value => {\n        setContato(value)\n        setValidationContato(null)\n      }}\n      returnKeyType=\"done\" \n      errorMessage={validationContato}/>  \n      \n      {/*Lara Fernanda*/}\n      <Text>Complemento:</Text>\n      <Input \n      keyboardType=\"default\" \n      placeholder=\"Complemento\" \n      returnKeyType=\"done\"/>\n\n      {/*Kenysson*/}\n      <RadioButton.Group onValueChange={newValue => setValue(newValue)} value={value}>\n        <View>\n          <Text>Masculino</Text>\n          <RadioButton value=\"first\" />\n        </View>\n        <View>\n          <Text>Feminino</Text>\n          <RadioButton value=\"second\" />\n        </View>\n      </RadioButton.Group>\n\n      <Input\n        placeholder=\"E-mail\"\n        onChangeText={value => {\n            setEmail(value)\n            setErrorEmail(null)\n        }}\n        keyboardType=\"email-address\"\n        errorMessage={errorEmail}        \n        />\n\n\n    <TouchableOpacity style={styles.button} onPress={() => salvarDados()}>\n        <Text style={{color:\"#fff\"}}> Cadastrar </Text>\n    </TouchableOpacity>\n    \n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}