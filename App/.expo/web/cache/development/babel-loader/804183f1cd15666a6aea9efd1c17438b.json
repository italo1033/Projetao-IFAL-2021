{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { DatePickerAndroid } from \"react-native-web/dist/index\";\nimport { TimePickerAndroid } from \"react-native-web/dist/index\";\nimport { DatePickerIOS } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Style from \"./style\";\nimport Moment from 'moment';\nvar FORMATS = {\n  'date': 'YYYY-MM-DD',\n  'datetime': 'YYYY-MM-DD HH:mm',\n  'time': 'HH:mm'\n};\nvar SUPPORTED_ORIENTATIONS = ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'];\n\nvar DatePicker = function (_Component) {\n  _inherits(DatePicker, _Component);\n\n  var _super = _createSuper(DatePicker);\n\n  function DatePicker(props) {\n    var _this;\n\n    _classCallCheck(this, DatePicker);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      date: _this.getDate(),\n      modalVisible: false,\n      animatedHeight: new Animated.Value(0),\n      allowPointerEvents: true\n    };\n    _this.getDate = _this.getDate.bind(_assertThisInitialized(_this));\n    _this.getDateStr = _this.getDateStr.bind(_assertThisInitialized(_this));\n    _this.datePicked = _this.datePicked.bind(_assertThisInitialized(_this));\n    _this.onPressDate = _this.onPressDate.bind(_assertThisInitialized(_this));\n    _this.onPressCancel = _this.onPressCancel.bind(_assertThisInitialized(_this));\n    _this.onPressConfirm = _this.onPressConfirm.bind(_assertThisInitialized(_this));\n    _this.onDateChange = _this.onDateChange.bind(_assertThisInitialized(_this));\n    _this.onPressMask = _this.onPressMask.bind(_assertThisInitialized(_this));\n    _this.onDatePicked = _this.onDatePicked.bind(_assertThisInitialized(_this));\n    _this.onTimePicked = _this.onTimePicked.bind(_assertThisInitialized(_this));\n    _this.onDatetimePicked = _this.onDatetimePicked.bind(_assertThisInitialized(_this));\n    _this.onDatetimeTimePicked = _this.onDatetimeTimePicked.bind(_assertThisInitialized(_this));\n    _this.setModalVisible = _this.setModalVisible.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DatePicker, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.date !== this.props.date) {\n        this.setState({\n          date: this.getDate(nextProps.date)\n        });\n      }\n    }\n  }, {\n    key: \"setModalVisible\",\n    value: function setModalVisible(visible) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          height = _this$props.height,\n          duration = _this$props.duration;\n\n      if (visible) {\n        this.setState({\n          modalVisible: visible\n        });\n        return Animated.timing(this.state.animatedHeight, {\n          toValue: height,\n          duration: duration\n        }).start();\n      } else {\n        return Animated.timing(this.state.animatedHeight, {\n          toValue: 0,\n          duration: duration\n        }).start(function () {\n          _this2.setState({\n            modalVisible: visible\n          });\n        });\n      }\n    }\n  }, {\n    key: \"onStartShouldSetResponder\",\n    value: function onStartShouldSetResponder(e) {\n      return true;\n    }\n  }, {\n    key: \"onMoveShouldSetResponder\",\n    value: function onMoveShouldSetResponder(e) {\n      return true;\n    }\n  }, {\n    key: \"onPressMask\",\n    value: function onPressMask() {\n      if (typeof this.props.onPressMask === 'function') {\n        this.props.onPressMask();\n      } else {\n        this.onPressCancel();\n      }\n    }\n  }, {\n    key: \"onPressCancel\",\n    value: function onPressCancel() {\n      this.setModalVisible(false);\n\n      if (typeof this.props.onCloseModal === 'function') {\n        this.props.onCloseModal();\n      }\n    }\n  }, {\n    key: \"onPressConfirm\",\n    value: function onPressConfirm() {\n      this.datePicked();\n      this.setModalVisible(false);\n\n      if (typeof this.props.onCloseModal === 'function') {\n        this.props.onCloseModal();\n      }\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.date;\n      var _this$props2 = this.props,\n          mode = _this$props2.mode,\n          minDate = _this$props2.minDate,\n          maxDate = _this$props2.maxDate,\n          _this$props2$format = _this$props2.format,\n          format = _this$props2$format === void 0 ? FORMATS[mode] : _this$props2$format;\n\n      if (!date) {\n        var now = new Date();\n\n        if (minDate) {\n          var _minDate = this.getDate(minDate);\n\n          if (now < _minDate) {\n            return _minDate;\n          }\n        }\n\n        if (maxDate) {\n          var _maxDate = this.getDate(maxDate);\n\n          if (now > _maxDate) {\n            return _maxDate;\n          }\n        }\n\n        return now;\n      }\n\n      if (date instanceof Date) {\n        return date;\n      }\n\n      return Moment(date, format).toDate();\n    }\n  }, {\n    key: \"getDateStr\",\n    value: function getDateStr() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.date;\n      var _this$props3 = this.props,\n          mode = _this$props3.mode,\n          _this$props3$format = _this$props3.format,\n          format = _this$props3$format === void 0 ? FORMATS[mode] : _this$props3$format;\n      var dateInstance = date instanceof Date ? date : this.getDate(date);\n\n      if (typeof this.props.getDateStr === 'function') {\n        return this.props.getDateStr(dateInstance);\n      }\n\n      return Moment(dateInstance).format(format);\n    }\n  }, {\n    key: \"datePicked\",\n    value: function datePicked() {\n      if (typeof this.props.onDateChange === 'function') {\n        this.props.onDateChange(this.getDateStr(this.state.date), this.state.date);\n      }\n    }\n  }, {\n    key: \"getTitleElement\",\n    value: function getTitleElement() {\n      var _this$props4 = this.props,\n          date = _this$props4.date,\n          placeholder = _this$props4.placeholder,\n          customStyles = _this$props4.customStyles,\n          allowFontScaling = _this$props4.allowFontScaling;\n\n      if (!date && placeholder) {\n        return React.createElement(Text, {\n          allowFontScaling: allowFontScaling,\n          style: [Style.placeholderText, customStyles.placeholderText]\n        }, placeholder);\n      }\n\n      return React.createElement(Text, {\n        allowFontScaling: allowFontScaling,\n        style: [Style.dateText, customStyles.dateText]\n      }, this.getDateStr());\n    }\n  }, {\n    key: \"onDateChange\",\n    value: function onDateChange(date) {\n      var _this3 = this;\n\n      this.setState({\n        allowPointerEvents: false,\n        date: date\n      });\n      var timeoutId = setTimeout(function () {\n        _this3.setState({\n          allowPointerEvents: true\n        });\n\n        clearTimeout(timeoutId);\n      }, 200);\n    }\n  }, {\n    key: \"onDatePicked\",\n    value: function onDatePicked(_ref) {\n      var action = _ref.action,\n          year = _ref.year,\n          month = _ref.month,\n          day = _ref.day;\n\n      if (action !== DatePickerAndroid.dismissedAction) {\n        this.setState({\n          date: new Date(year, month, day)\n        });\n        this.datePicked();\n      } else {\n        this.onPressCancel();\n      }\n    }\n  }, {\n    key: \"onTimePicked\",\n    value: function onTimePicked(_ref2) {\n      var action = _ref2.action,\n          hour = _ref2.hour,\n          minute = _ref2.minute;\n\n      if (action !== DatePickerAndroid.dismissedAction) {\n        this.setState({\n          date: Moment().hour(hour).minute(minute).toDate()\n        });\n        this.datePicked();\n      } else {\n        this.onPressCancel();\n      }\n    }\n  }, {\n    key: \"onDatetimePicked\",\n    value: function onDatetimePicked(_ref3) {\n      var action = _ref3.action,\n          year = _ref3.year,\n          month = _ref3.month,\n          day = _ref3.day;\n      var _this$props5 = this.props,\n          mode = _this$props5.mode,\n          androidMode = _this$props5.androidMode,\n          _this$props5$format = _this$props5.format,\n          format = _this$props5$format === void 0 ? FORMATS[mode] : _this$props5$format,\n          _this$props5$is24Hour = _this$props5.is24Hour,\n          is24Hour = _this$props5$is24Hour === void 0 ? !format.match(/h|a/) : _this$props5$is24Hour;\n\n      if (action !== DatePickerAndroid.dismissedAction) {\n        var timeMoment = Moment(this.state.date);\n        TimePickerAndroid.open({\n          hour: timeMoment.hour(),\n          minute: timeMoment.minutes(),\n          is24Hour: is24Hour,\n          mode: androidMode\n        }).then(this.onDatetimeTimePicked.bind(this, year, month, day));\n      } else {\n        this.onPressCancel();\n      }\n    }\n  }, {\n    key: \"onDatetimeTimePicked\",\n    value: function onDatetimeTimePicked(year, month, day, _ref4) {\n      var action = _ref4.action,\n          hour = _ref4.hour,\n          minute = _ref4.minute;\n\n      if (action !== DatePickerAndroid.dismissedAction) {\n        this.setState({\n          date: new Date(year, month, day, hour, minute)\n        });\n        this.datePicked();\n      } else {\n        this.onPressCancel();\n      }\n    }\n  }, {\n    key: \"onPressDate\",\n    value: function onPressDate() {\n      if (this.props.disabled) {\n        return true;\n      }\n\n      Keyboard.dismiss();\n      this.setState({\n        date: this.getDate()\n      });\n\n      if (Platform.OS === 'ios') {\n        this.setModalVisible(true);\n      } else {\n        var _this$props6 = this.props,\n            mode = _this$props6.mode,\n            androidMode = _this$props6.androidMode,\n            _this$props6$format = _this$props6.format,\n            format = _this$props6$format === void 0 ? FORMATS[mode] : _this$props6$format,\n            minDate = _this$props6.minDate,\n            maxDate = _this$props6.maxDate,\n            _this$props6$is24Hour = _this$props6.is24Hour,\n            is24Hour = _this$props6$is24Hour === void 0 ? !format.match(/h|a/) : _this$props6$is24Hour;\n\n        if (mode === 'date') {\n          DatePickerAndroid.open({\n            date: this.state.date,\n            minDate: minDate && this.getDate(minDate),\n            maxDate: maxDate && this.getDate(maxDate),\n            mode: androidMode\n          }).then(this.onDatePicked);\n        } else if (mode === 'time') {\n          var timeMoment = Moment(this.state.date);\n          TimePickerAndroid.open({\n            hour: timeMoment.hour(),\n            minute: timeMoment.minutes(),\n            is24Hour: is24Hour,\n            mode: androidMode\n          }).then(this.onTimePicked);\n        } else if (mode === 'datetime') {\n          DatePickerAndroid.open({\n            date: this.state.date,\n            minDate: minDate && this.getDate(minDate),\n            maxDate: maxDate && this.getDate(maxDate),\n            mode: androidMode\n          }).then(this.onDatetimePicked);\n        }\n      }\n\n      if (typeof this.props.onOpenModal === 'function') {\n        this.props.onOpenModal();\n      }\n    }\n  }, {\n    key: \"_renderIcon\",\n    value: function _renderIcon() {\n      var _this$props7 = this.props,\n          showIcon = _this$props7.showIcon,\n          iconSource = _this$props7.iconSource,\n          iconComponent = _this$props7.iconComponent,\n          customStyles = _this$props7.customStyles;\n\n      if (showIcon) {\n        if (iconComponent) {\n          return iconComponent;\n        }\n\n        return React.createElement(Image, {\n          style: [Style.dateIcon, customStyles.dateIcon],\n          source: iconSource\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props8 = this.props,\n          mode = _this$props8.mode,\n          style = _this$props8.style,\n          customStyles = _this$props8.customStyles,\n          disabled = _this$props8.disabled,\n          minDate = _this$props8.minDate,\n          maxDate = _this$props8.maxDate,\n          minuteInterval = _this$props8.minuteInterval,\n          timeZoneOffsetInMinutes = _this$props8.timeZoneOffsetInMinutes,\n          cancelBtnText = _this$props8.cancelBtnText,\n          confirmBtnText = _this$props8.confirmBtnText,\n          TouchableComponent = _this$props8.TouchableComponent,\n          testID = _this$props8.testID,\n          cancelBtnTestID = _this$props8.cancelBtnTestID,\n          confirmBtnTestID = _this$props8.confirmBtnTestID,\n          allowFontScaling = _this$props8.allowFontScaling,\n          locale = _this$props8.locale;\n      var dateInputStyle = [Style.dateInput, customStyles.dateInput, disabled && Style.disabled, disabled && customStyles.disabled];\n      return React.createElement(TouchableComponent, {\n        style: [Style.dateTouch, style],\n        underlayColor: 'transparent',\n        onPress: this.onPressDate,\n        testID: testID\n      }, React.createElement(View, {\n        style: [Style.dateTouchBody, customStyles.dateTouchBody]\n      }, !this.props.hideText ? React.createElement(View, {\n        style: dateInputStyle\n      }, this.getTitleElement()) : React.createElement(View, null), this._renderIcon(), Platform.OS === 'ios' && React.createElement(Modal, {\n        transparent: true,\n        animationType: \"none\",\n        visible: this.state.modalVisible,\n        supportedOrientations: SUPPORTED_ORIENTATIONS,\n        onRequestClose: function onRequestClose() {\n          _this4.setModalVisible(false);\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        }\n      }, React.createElement(TouchableComponent, {\n        style: Style.datePickerMask,\n        activeOpacity: 1,\n        underlayColor: '#00000077',\n        onPress: this.onPressMask\n      }, React.createElement(TouchableComponent, {\n        underlayColor: '#fff',\n        style: {\n          flex: 1\n        }\n      }, React.createElement(Animated.View, {\n        style: [Style.datePickerCon, {\n          height: this.state.animatedHeight\n        }, customStyles.datePickerCon]\n      }, React.createElement(View, {\n        pointerEvents: this.state.allowPointerEvents ? 'auto' : 'none'\n      }, React.createElement(DatePickerIOS, {\n        date: this.state.date,\n        mode: mode,\n        minimumDate: minDate && this.getDate(minDate),\n        maximumDate: maxDate && this.getDate(maxDate),\n        onDateChange: this.onDateChange,\n        minuteInterval: minuteInterval,\n        timeZoneOffsetInMinutes: timeZoneOffsetInMinutes ? timeZoneOffsetInMinutes : null,\n        style: [Style.datePicker, customStyles.datePicker],\n        locale: locale\n      })), React.createElement(TouchableComponent, {\n        underlayColor: 'transparent',\n        onPress: this.onPressCancel,\n        style: [Style.btnText, Style.btnCancel, customStyles.btnCancel],\n        testID: cancelBtnTestID\n      }, React.createElement(Text, {\n        allowFontScaling: allowFontScaling,\n        style: [Style.btnTextText, Style.btnTextCancel, customStyles.btnTextCancel]\n      }, cancelBtnText)), React.createElement(TouchableComponent, {\n        underlayColor: 'transparent',\n        onPress: this.onPressConfirm,\n        style: [Style.btnText, Style.btnConfirm, customStyles.btnConfirm],\n        testID: confirmBtnTestID\n      }, React.createElement(Text, {\n        allowFontScaling: allowFontScaling,\n        style: [Style.btnTextText, customStyles.btnTextConfirm]\n      }, confirmBtnText)))))))));\n    }\n  }]);\n\n  return DatePicker;\n}(Component);\n\nDatePicker.defaultProps = {\n  mode: 'date',\n  androidMode: 'default',\n  date: '',\n  height: 259,\n  duration: 300,\n  confirmBtnText: '确定',\n  cancelBtnText: '取消',\n  iconSource: require(\"./date_icon.png\"),\n  customStyles: {},\n  showIcon: true,\n  disabled: false,\n  allowFontScaling: true,\n  hideText: false,\n  placeholder: '',\n  TouchableComponent: TouchableHighlight,\n  modalOnResponderTerminationRequest: function modalOnResponderTerminationRequest(e) {\n    return true;\n  }\n};\nDatePicker.propTypes = {\n  mode: PropTypes.oneOf(['date', 'datetime', 'time']),\n  androidMode: PropTypes.oneOf(['clock', 'calendar', 'spinner', 'default']),\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.object]),\n  format: PropTypes.string,\n  minDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  maxDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  height: PropTypes.number,\n  duration: PropTypes.number,\n  confirmBtnText: PropTypes.string,\n  cancelBtnText: PropTypes.string,\n  iconSource: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  iconComponent: PropTypes.element,\n  customStyles: PropTypes.object,\n  showIcon: PropTypes.bool,\n  disabled: PropTypes.bool,\n  allowFontScaling: PropTypes.bool,\n  onDateChange: PropTypes.func,\n  onOpenModal: PropTypes.func,\n  onCloseModal: PropTypes.func,\n  onPressMask: PropTypes.func,\n  placeholder: PropTypes.string,\n  modalOnResponderTerminationRequest: PropTypes.func,\n  is24Hour: PropTypes.bool,\n  getDateStr: PropTypes.func,\n  locale: PropTypes.string\n};\nexport default DatePicker;","map":{"version":3,"sources":["/home/italo/Projetao-IFAL-2021/App/node_modules/react-native-datepicker/datepicker.js"],"names":["React","Component","PropTypes","DatePickerAndroid","TimePickerAndroid","DatePickerIOS","Style","Moment","FORMATS","SUPPORTED_ORIENTATIONS","DatePicker","props","state","date","getDate","modalVisible","animatedHeight","Animated","Value","allowPointerEvents","bind","getDateStr","datePicked","onPressDate","onPressCancel","onPressConfirm","onDateChange","onPressMask","onDatePicked","onTimePicked","onDatetimePicked","onDatetimeTimePicked","setModalVisible","nextProps","setState","visible","height","duration","timing","toValue","start","e","onCloseModal","mode","minDate","maxDate","format","now","Date","_minDate","_maxDate","toDate","dateInstance","placeholder","customStyles","allowFontScaling","placeholderText","dateText","timeoutId","setTimeout","clearTimeout","action","year","month","day","dismissedAction","hour","minute","androidMode","is24Hour","match","timeMoment","open","minutes","then","disabled","Keyboard","dismiss","Platform","OS","onOpenModal","showIcon","iconSource","iconComponent","dateIcon","style","minuteInterval","timeZoneOffsetInMinutes","cancelBtnText","confirmBtnText","TouchableComponent","testID","cancelBtnTestID","confirmBtnTestID","locale","dateInputStyle","dateInput","dateTouch","dateTouchBody","hideText","getTitleElement","_renderIcon","flex","datePickerMask","datePickerCon","datePicker","btnText","btnCancel","btnTextText","btnTextCancel","btnConfirm","btnTextConfirm","defaultProps","require","TouchableHighlight","modalOnResponderTerminationRequest","propTypes","oneOf","oneOfType","string","instanceOf","object","number","element","bool","func"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Text,\n  Image,\n  Modal,\n  TouchableHighlight,\n  DatePickerAndroid,\n  TimePickerAndroid,\n  DatePickerIOS,\n  Platform,\n  Animated,\n  Keyboard\n} from 'react-native';\nimport Style from './style';\nimport Moment from 'moment';\n\nconst FORMATS = {\n  'date': 'YYYY-MM-DD',\n  'datetime': 'YYYY-MM-DD HH:mm',\n  'time': 'HH:mm'\n};\n\nconst SUPPORTED_ORIENTATIONS = ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'];\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: this.getDate(),\n      modalVisible: false,\n      animatedHeight: new Animated.Value(0),\n      allowPointerEvents: true\n    };\n\n    this.getDate = this.getDate.bind(this);\n    this.getDateStr = this.getDateStr.bind(this);\n    this.datePicked = this.datePicked.bind(this);\n    this.onPressDate = this.onPressDate.bind(this);\n    this.onPressCancel = this.onPressCancel.bind(this);\n    this.onPressConfirm = this.onPressConfirm.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n    this.onPressMask = this.onPressMask.bind(this);\n    this.onDatePicked = this.onDatePicked.bind(this);\n    this.onTimePicked = this.onTimePicked.bind(this);\n    this.onDatetimePicked = this.onDatetimePicked.bind(this);\n    this.onDatetimeTimePicked = this.onDatetimeTimePicked.bind(this);\n    this.setModalVisible = this.setModalVisible.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.date !== this.props.date) {\n      this.setState({date: this.getDate(nextProps.date)});\n    }\n  }\n\n  setModalVisible(visible) {\n    const {height, duration} = this.props;\n\n    // slide animation\n    if (visible) {\n      this.setState({modalVisible: visible});\n      return Animated.timing(\n        this.state.animatedHeight,\n        {\n          toValue: height,\n          duration: duration\n        }\n      ).start();\n    } else {\n      return Animated.timing(\n        this.state.animatedHeight,\n        {\n          toValue: 0,\n          duration: duration\n        }\n      ).start(() => {\n        this.setState({modalVisible: visible});\n      });\n    }\n  }\n\n  onStartShouldSetResponder(e) {\n    return true;\n  }\n\n  onMoveShouldSetResponder(e) {\n    return true;\n  }\n\n  onPressMask() {\n    if (typeof this.props.onPressMask === 'function') {\n      this.props.onPressMask();\n    } else {\n      this.onPressCancel();\n    }\n  }\n\n  onPressCancel() {\n    this.setModalVisible(false);\n\n    if (typeof this.props.onCloseModal === 'function') {\n      this.props.onCloseModal();\n    }\n  }\n\n  onPressConfirm() {\n    this.datePicked();\n    this.setModalVisible(false);\n\n    if (typeof this.props.onCloseModal === 'function') {\n      this.props.onCloseModal();\n    }\n  }\n\n  getDate(date = this.props.date) {\n    const {mode, minDate, maxDate, format = FORMATS[mode]} = this.props;\n\n    // date默认值\n    if (!date) {\n      let now = new Date();\n      if (minDate) {\n        let _minDate = this.getDate(minDate);\n\n        if (now < _minDate) {\n          return _minDate;\n        }\n      }\n\n      if (maxDate) {\n        let _maxDate = this.getDate(maxDate);\n\n        if (now > _maxDate) {\n          return _maxDate;\n        }\n      }\n\n      return now;\n    }\n\n    if (date instanceof Date) {\n      return date;\n    }\n\n    return Moment(date, format).toDate();\n  }\n\n  getDateStr(date = this.props.date) {\n    const {mode, format = FORMATS[mode]} = this.props;\n\n    const dateInstance = date instanceof Date\n      ? date\n      : this.getDate(date);\n\n    if (typeof this.props.getDateStr === 'function') {\n      return this.props.getDateStr(dateInstance);\n    }\n\n    return Moment(dateInstance).format(format);\n  }\n\n  datePicked() {\n    if (typeof this.props.onDateChange === 'function') {\n      this.props.onDateChange(this.getDateStr(this.state.date), this.state.date);\n    }\n  }\n\n  getTitleElement() {\n    const {date, placeholder, customStyles, allowFontScaling} = this.props;\n\n    if (!date && placeholder) {\n      return (\n        <Text allowFontScaling={allowFontScaling} style={[Style.placeholderText, customStyles.placeholderText]}>\n          {placeholder}\n        </Text>\n      );\n    }\n    return (\n      <Text allowFontScaling={allowFontScaling} style={[Style.dateText, customStyles.dateText]}>\n        {this.getDateStr()}\n      </Text>\n    );\n  }\n\n  onDateChange(date) {\n    this.setState({\n      allowPointerEvents: false,\n      date: date\n    });\n    const timeoutId = setTimeout(() => {\n      this.setState({\n        allowPointerEvents: true\n      });\n      clearTimeout(timeoutId);\n    }, 200);\n  }\n\n  onDatePicked({action, year, month, day}) {\n    if (action !== DatePickerAndroid.dismissedAction) {\n      this.setState({\n        date: new Date(year, month, day)\n      });\n      this.datePicked();\n    } else {\n      this.onPressCancel();\n    }\n  }\n\n  onTimePicked({action, hour, minute}) {\n    if (action !== DatePickerAndroid.dismissedAction) {\n      this.setState({\n        date: Moment().hour(hour).minute(minute).toDate()\n      });\n      this.datePicked();\n    } else {\n      this.onPressCancel();\n    }\n  }\n\n  onDatetimePicked({action, year, month, day}) {\n    const {mode, androidMode, format = FORMATS[mode], is24Hour = !format.match(/h|a/)} = this.props;\n\n    if (action !== DatePickerAndroid.dismissedAction) {\n      let timeMoment = Moment(this.state.date);\n\n      TimePickerAndroid.open({\n        hour: timeMoment.hour(),\n        minute: timeMoment.minutes(),\n        is24Hour: is24Hour,\n        mode: androidMode\n      }).then(this.onDatetimeTimePicked.bind(this, year, month, day));\n    } else {\n      this.onPressCancel();\n    }\n  }\n\n  onDatetimeTimePicked(year, month, day, {action, hour, minute}) {\n    if (action !== DatePickerAndroid.dismissedAction) {\n      this.setState({\n        date: new Date(year, month, day, hour, minute)\n      });\n      this.datePicked();\n    } else {\n      this.onPressCancel();\n    }\n  }\n\n  onPressDate() {\n    if (this.props.disabled) {\n      return true;\n    }\n\n    Keyboard.dismiss();\n\n    // reset state\n    this.setState({\n      date: this.getDate()\n    });\n\n    if (Platform.OS === 'ios') {\n      this.setModalVisible(true);\n    } else {\n\n      const {mode, androidMode, format = FORMATS[mode], minDate, maxDate, is24Hour = !format.match(/h|a/)} = this.props;\n\n      // 选日期\n      if (mode === 'date') {\n        DatePickerAndroid.open({\n          date: this.state.date,\n          minDate: minDate && this.getDate(minDate),\n          maxDate: maxDate && this.getDate(maxDate),\n          mode: androidMode\n        }).then(this.onDatePicked);\n      } else if (mode === 'time') {\n        // 选时间\n\n        let timeMoment = Moment(this.state.date);\n\n        TimePickerAndroid.open({\n          hour: timeMoment.hour(),\n          minute: timeMoment.minutes(),\n          is24Hour: is24Hour,\n          mode: androidMode\n        }).then(this.onTimePicked);\n      } else if (mode === 'datetime') {\n        // 选日期和时间\n\n        DatePickerAndroid.open({\n          date: this.state.date,\n          minDate: minDate && this.getDate(minDate),\n          maxDate: maxDate && this.getDate(maxDate),\n          mode: androidMode\n        }).then(this.onDatetimePicked);\n      }\n    }\n\n    if (typeof this.props.onOpenModal === 'function') {\n      this.props.onOpenModal();\n    }\n  }\n\n  _renderIcon() {\n    const {\n      showIcon,\n      iconSource,\n      iconComponent,\n      customStyles\n    } = this.props;\n\n    if (showIcon) {\n      if (iconComponent) {\n        return iconComponent;\n      }\n      return (\n        <Image\n          style={[Style.dateIcon, customStyles.dateIcon]}\n          source={iconSource}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      mode,\n      style,\n      customStyles,\n      disabled,\n      minDate,\n      maxDate,\n      minuteInterval,\n      timeZoneOffsetInMinutes,\n      cancelBtnText,\n      confirmBtnText,\n      TouchableComponent,\n      testID,\n      cancelBtnTestID,\n      confirmBtnTestID,\n      allowFontScaling,\n      locale\n    } = this.props;\n\n    const dateInputStyle = [\n      Style.dateInput, customStyles.dateInput,\n      disabled && Style.disabled,\n      disabled && customStyles.disabled\n    ];\n\n    return (\n      <TouchableComponent\n        style={[Style.dateTouch, style]}\n        underlayColor={'transparent'}\n        onPress={this.onPressDate}\n        testID={testID}\n      >\n        <View style={[Style.dateTouchBody, customStyles.dateTouchBody]}>\n          {\n            !this.props.hideText ?\n              <View style={dateInputStyle}>\n                {this.getTitleElement()}\n              </View>\n            :\n              <View/>\n          }\n          {this._renderIcon()}\n          {Platform.OS === 'ios' && <Modal\n            transparent={true}\n            animationType=\"none\"\n            visible={this.state.modalVisible}\n            supportedOrientations={SUPPORTED_ORIENTATIONS}\n            onRequestClose={() => {this.setModalVisible(false);}}\n          >\n            <View\n              style={{flex: 1}}\n            >\n              <TouchableComponent\n                style={Style.datePickerMask}\n                activeOpacity={1}\n                underlayColor={'#00000077'}\n                onPress={this.onPressMask}\n              >\n                <TouchableComponent\n                  underlayColor={'#fff'}\n                  style={{flex: 1}}\n                >\n                  <Animated.View\n                    style={[Style.datePickerCon, {height: this.state.animatedHeight}, customStyles.datePickerCon]}\n                  >\n                    <View pointerEvents={this.state.allowPointerEvents ? 'auto' : 'none'}>\n                      <DatePickerIOS\n                        date={this.state.date}\n                        mode={mode}\n                        minimumDate={minDate && this.getDate(minDate)}\n                        maximumDate={maxDate && this.getDate(maxDate)}\n                        onDateChange={this.onDateChange}\n                        minuteInterval={minuteInterval}\n                        timeZoneOffsetInMinutes={timeZoneOffsetInMinutes ? timeZoneOffsetInMinutes : null}\n                        style={[Style.datePicker, customStyles.datePicker]}\n                        locale={locale}\n                      />\n                    </View>\n                    <TouchableComponent\n                      underlayColor={'transparent'}\n                      onPress={this.onPressCancel}\n                      style={[Style.btnText, Style.btnCancel, customStyles.btnCancel]}\n                      testID={cancelBtnTestID}\n                    >\n                      <Text\n                        allowFontScaling={allowFontScaling}\n                        style={[Style.btnTextText, Style.btnTextCancel, customStyles.btnTextCancel]}\n                      >\n                        {cancelBtnText}\n                      </Text>\n                    </TouchableComponent>\n                    <TouchableComponent\n                      underlayColor={'transparent'}\n                      onPress={this.onPressConfirm}\n                      style={[Style.btnText, Style.btnConfirm, customStyles.btnConfirm]}\n                      testID={confirmBtnTestID}\n                    >\n                      <Text allowFontScaling={allowFontScaling}\n                            style={[Style.btnTextText, customStyles.btnTextConfirm]}\n                      >\n                        {confirmBtnText}\n                      </Text>\n                    </TouchableComponent>\n                  </Animated.View>\n                </TouchableComponent>\n              </TouchableComponent>\n            </View>\n          </Modal>}\n        </View>\n      </TouchableComponent>\n    );\n  }\n}\n\nDatePicker.defaultProps = {\n  mode: 'date',\n  androidMode: 'default',\n  date: '',\n  // component height: 216(DatePickerIOS) + 1(borderTop) + 42(marginTop), IOS only\n  height: 259,\n\n  // slide animation duration time, default to 300ms, IOS only\n  duration: 300,\n  confirmBtnText: '确定',\n  cancelBtnText: '取消',\n  iconSource: require('./date_icon.png'),\n  customStyles: {},\n\n  // whether or not show the icon\n  showIcon: true,\n  disabled: false,\n  allowFontScaling: true,\n  hideText: false,\n  placeholder: '',\n  TouchableComponent: TouchableHighlight,\n  modalOnResponderTerminationRequest: e => true\n};\n\nDatePicker.propTypes = {\n  mode: PropTypes.oneOf(['date', 'datetime', 'time']),\n  androidMode: PropTypes.oneOf(['clock', 'calendar', 'spinner', 'default']),\n  date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.object]),\n  format: PropTypes.string,\n  minDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  maxDate: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n  height: PropTypes.number,\n  duration: PropTypes.number,\n  confirmBtnText: PropTypes.string,\n  cancelBtnText: PropTypes.string,\n  iconSource: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  iconComponent: PropTypes.element,\n  customStyles: PropTypes.object,\n  showIcon: PropTypes.bool,\n  disabled: PropTypes.bool,\n  allowFontScaling: PropTypes.bool,\n  onDateChange: PropTypes.func,\n  onOpenModal: PropTypes.func,\n  onCloseModal: PropTypes.func,\n  onPressMask: PropTypes.func,\n  placeholder: PropTypes.string,\n  modalOnResponderTerminationRequest: PropTypes.func,\n  is24Hour: PropTypes.bool,\n  getDateStr: PropTypes.func,\n  locale: PropTypes.string\n};\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}