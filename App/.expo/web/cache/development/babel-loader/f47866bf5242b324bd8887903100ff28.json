{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { styles } from \"./style.js\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Text, Button } from 'react-native-elements';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nexport function Cadastro(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorEmail = _useState6[0],\n      setErrorEmail = _useState6[1];\n\n  var _React$useState = React.useState('first'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cpf = _useState8[0],\n      setCpf = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorCpf = _useState10[0],\n      setErrorCpf = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      nome = _useState12[0],\n      setNome = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errorNome = _useState14[0],\n      setErrorNome = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      senha = _useState16[0],\n      setSenha = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      errorSenha = _useState18[0],\n      setErrorSenha = _useState18[1];\n\n  var validar = function validar() {\n    var error = false;\n    setErrorEmail(null);\n    var regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regexEmail.test(String(email).toLowerCase())) {\n      setErrorEmail(\"Preencha seu e-mail corretamente\");\n      error = true;\n    }\n\n    function cpfCalculo(qtdNum, cpfNumber, increment) {\n      var valor = cpfNumber.substr(0, qtdNum),\n          soma2 = 0;\n\n      for (var i = 0; i < valor.length; i++) {\n        soma2 += parseInt(valor[i]) * increment;\n        increment--;\n      }\n\n      return soma2;\n    }\n\n    function somaDigitos(soma) {\n      var result = soma * 10 % 11;\n      return String(result);\n    }\n\n    setErrorCpf(null);\n    var regexCPF = /^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/;\n\n    if (!regexCPF.test(cpf)) {\n      if (cpf != null) {\n        var cpfNumber = cpf.replace(/\\.|-/gm, '');\n        var cpfNumeros = cpfCalculo(9, cpfNumber, 10);\n        var cpfNumeros2 = cpfCalculo(10, cpfNumber, 11);\n        var result1 = somaDigitos(cpfNumeros);\n        var result2 = somaDigitos(cpfNumeros2);\n        var result3 = result1 + result2;\n        var cpfF = cpfNumber.substr(9, 2);\n\n        if (result3 != cpfF || !regexCPF.test(cpf)) {\n          setErrorCpf(\"CPF Inválido\");\n          error = true;\n        } else {\n          setErrorCpf(null);\n        }\n      } else {\n        setErrorCpf(\"Preencha seu CPF\");\n        error = true;\n      }\n    }\n\n    setErrorNome(null);\n    var regexNome = /[^a-zà-ú]/gi;\n\n    if (!regexNome.test(nome)) {\n      setErrorNome(\"Por favor preencha todos os campos\");\n      error = true;\n    }\n\n    setErrorSenha(null);\n    var regexSenha = /^[a-z0-9_-]/;\n\n    if (!regexSenha.test(senha)) {\n      setErrorSenha(\"Por favor preencha todos os campos\");\n      error = true;\n    }\n\n    return !error;\n  };\n\n  var bcrypt = require('bcryptjs');\n\n  var car = bcrypt.genSaltSync('10');\n  var novaSenha = String(bcrypt.hashSync(senha, car));\n  var dados = [{\n    'Nome': nome\n  }, {\n    'CPF': cpf\n  }, {\n    'Data de Nascimento': ''\n  }, {\n    'Email': email\n  }, {\n    'Senha': newSenha\n  }];\n\n  var salvarDados = function salvarDados() {\n    if (validar()) {\n      console.log(dados);\n    }\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    console.warn(\"A date has been picked: \", date);\n    hideDatePicker();\n  };\n\n  return React.createElement(View, {\n    style: styles.isBackgroundGeneral\n  }, React.createElement(Text, null, \"Nome:\"), React.createElement(Input, {\n    keyboardType: \"default\",\n    placeholder: \"Maria dos Santos\",\n    onChangeText: function onChangeText(value) {\n      return setNome(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorNome\n  }), React.createElement(Text, null, \"CPF:\"), React.createElement(Input, {\n    keyboardType: \"number-pad\",\n    placeholder: \"142.832.344-24\",\n    onChangeText: function onChangeText(value) {\n      return setCpf(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorCpf\n  }), React.createElement(Text, null, \"Email:\"), React.createElement(Input, {\n    placeholder: \"receitas12@gmail.com\",\n    onChangeText: function onChangeText(value) {\n      setEmail(value);\n      setErrorEmail(null);\n    },\n    errorMessage: errorEmail\n  }), React.createElement(Text, null, \"Senha:\"), React.createElement(Input, {\n    secureTextEntry: true,\n    placeholder: \"Digite sua senha\",\n    onChangeText: function onChangeText(value) {\n      setSenha(value);\n    },\n    returnKeyType: \"done\",\n    errorMessage: errorSenha\n  }), React.createElement(Button, {\n    title: \"Show Date Picker\",\n    onPress: showDatePicker\n  }), React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: \"date\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return salvarDados();\n    },\n    \"data-testid\": \"form-btn\"\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    }\n  }, \" Cadastrar \")));\n}","map":{"version":3,"sources":["/home/lara/Projetao-IFAL-2021/App/src/Screens/Cadastro/index.js"],"names":["React","useState","styles","Input","Text","Button","DateTimePickerModal","Cadastro","navigation","isDatePickerVisible","setDatePickerVisibility","email","setEmail","errorEmail","setErrorEmail","value","setValue","cpf","setCpf","errorCpf","setErrorCpf","nome","setNome","errorNome","setErrorNome","senha","setSenha","errorSenha","setErrorSenha","validar","error","regexEmail","test","String","toLowerCase","cpfCalculo","qtdNum","cpfNumber","increment","valor","substr","soma2","i","length","parseInt","somaDigitos","soma","result","regexCPF","replace","cpfNumeros","cpfNumeros2","result1","result2","result3","cpfF","regexNome","regexSenha","bcrypt","require","car","genSaltSync","novaSenha","hashSync","dados","newSenha","salvarDados","console","log","showDatePicker","hideDatePicker","handleConfirm","date","warn","isBackgroundGeneral","button","color"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { styles } from './style.js';\nimport { TouchableOpacity, View } from 'react-native';\nimport { Input, Text, Button } from 'react-native-elements';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\n\n\nexport function Cadastro({navigation}) {\n\n  //Calendario\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n\n  //email\n  const [email, setEmail] = useState(null)\n  const [errorEmail, setErrorEmail] = useState(null)\n\n  //picker\n  const [value, setValue] = React.useState('first');\n\n  //CPF\n  const [cpf, setCpf] = useState(null)\n  const [errorCpf, setErrorCpf] = useState(null)\n\n  //Nome\n  const [nome, setNome] = useState(null)\n  const [errorNome, setErrorNome] = useState(null)\n\n  //Senha\n  const [senha, setSenha] = useState(null)\n  const [errorSenha, setErrorSenha] = useState(null)\n\n  const validar = () => {\n    let error = false\n\n  \n    // Validando Email\n    setErrorEmail(null)\n    const regexEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    if (!regexEmail.test(String(email).toLowerCase())){\n      setErrorEmail(\"Preencha seu e-mail corretamente\")\n      error = true\n    }\n\n    // Validando CPF\n    function cpfCalculo(qtdNum, cpfNumber, increment) {\n      var valor = cpfNumber.substr(0, qtdNum), soma2 = 0\n      for(let i=0; i<valor.length; i++) {\n        soma2 += parseInt(valor[i]) * increment\n        increment--;\n      }\n      return soma2\n    } \n\n    function somaDigitos(soma) {\n      var result = (soma * 10) % 11\n      return String(result)\n    }\n\n    setErrorCpf(null)\n    const regexCPF =/^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/\n    if (!regexCPF.test(cpf)){\n      if(cpf != null) {\n        var cpfNumber = cpf.replace(/\\.|-/gm,'')\n        var cpfNumeros = cpfCalculo(9, cpfNumber, 10)\n        var cpfNumeros2 = cpfCalculo(10, cpfNumber, 11)\n    \n        var result1  = somaDigitos(cpfNumeros)\n        var result2 = somaDigitos(cpfNumeros2)\n\n        var result3 = result1 + result2\n        const cpfF = cpfNumber.substr(9, 2)\n\n        if(result3 != cpfF || !regexCPF.test(cpf)) {\n          setErrorCpf(\"CPF Inválido\")\n          error = true\n        } else {\n          setErrorCpf(null)\n        }\n\n      } else {\n        setErrorCpf(\"Preencha seu CPF\")\n        error = true\n      }\n    }\n\n    // validando Nome\n    setErrorNome(null)\n    const regexNome= /[^a-zà-ú]/gi\n    if (!regexNome.test(nome)) {\n      setErrorNome(\"Por favor preencha todos os campos\")\n      error = true\n    }\n\n    // validando Senha\n    setErrorSenha(null)\n    const regexSenha= /^[a-z0-9_-]/\n    if (!regexSenha.test(senha)) {\n      setErrorSenha(\"Por favor preencha todos os campos\")\n      error = true\n    }\n\n    return !error\n  }\n\n  const bcrypt = require('bcryptjs')\n  const car = bcrypt.genSaltSync('10')\n\n  const novaSenha = String(bcrypt.hashSync(senha, car))\n\n  const dados = [\n    { 'Nome': nome },\n    {'CPF': cpf},\n    {'Data de Nascimento': ''},\n    {'Email': email},\n    {'Senha': newSenha}\n  ]\n\n  const salvarDados = () => {\n    if(validar()) {\n      console.log(dados)\n    }\n  }\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n      setDatePickerVisibility(false);\n  };\n\n  const handleConfirm = (date) => {\n      console.warn(\"A date has been picked: \", date);\n      hideDatePicker();\n  };\n\n  return (\n    <View style={styles.isBackgroundGeneral}>\n\n      {/* Italo */}\n      <Text>Nome:</Text>\n      <Input\n          keyboardType=\"default\" \n          placeholder=\"Maria dos Santos\" \n          onChangeText={value => setNome(value)}\n          returnKeyType=\"done\" \n          errorMessage={errorNome}\n      />\n\n      {/* Italo */}\n      <Text>CPF:</Text>\n      <Input \n          keyboardType=\"number-pad\" \n          placeholder=\"142.832.344-24\" \n          onChangeText={value => setCpf(value)}\n          returnKeyType=\"done\" \n          errorMessage={errorCpf}\n      />\n\n      {/*Kenysson*/}\n      <Text>Email:</Text>\n      <Input\n            placeholder=\"receitas12@gmail.com\"\n            onChangeText={value => {\n                setEmail(value)\n                setErrorEmail(null)\n            }}\n            \n            errorMessage={errorEmail}        \n        />\n\n      <Text>Senha:</Text>\n      <Input\n            secureTextEntry={true}\n            placeholder=\"Digite sua senha\"\n            onChangeText = {value => {\n              setSenha(value)\n            }}\n            returnKeyType=\"done\"\n            errorMessage={errorSenha}      \n      />\n\n      <Button title=\"Show Date Picker\" onPress={showDatePicker} />\n      <DateTimePickerModal\n          isVisible={isDatePickerVisible}\n          mode=\"date\"\n          onConfirm={handleConfirm}\n          onCancel={hideDatePicker}\n      />\n\n    <TouchableOpacity \n      style={styles.button} \n      onPress={() => salvarDados()}\n      data-testid=\"form-btn\"\n    >\n        <Text style={{color:\"#fff\"}}> Cadastrar </Text>\n    </TouchableOpacity>\n    \n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}