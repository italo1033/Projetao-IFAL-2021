{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { styles } from \"./style.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Icon from \"@expo/vector-icons/Fontisto\";\nimport * as Facebook from \"expo-facebook\";\nimport * as Google from 'expo-google-app-auth';\nexport function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var signInGoogle = function signInGoogle() {\n    var _await$Google$logInAs, type, _user;\n\n    return _regeneratorRuntime.async(function signInGoogle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Google.logInAsync({\n              androidClientId: \"153675377851-fh50uhfel6np8031hhj2of0g8bs7o71f.apps.googleusercontent.com\"\n            }));\n\n          case 3:\n            _await$Google$logInAs = _context.sent;\n            type = _await$Google$logInAs.type;\n            _user = _await$Google$logInAs.user;\n\n            if (type === 'success') {\n              navigation.navigate(\"Home\", {\n                user: _user\n              });\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Verifique o erro e tente novamente', _context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var signUpFacebook = function signUpFacebook() {\n    var _await$Facebook$logIn, type, token, response, data, message;\n\n    return _regeneratorRuntime.async(function signUpFacebook$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync(\"651857032664740\"));\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n              permissions: [\"public_profile\", \"email\"]\n            }));\n\n          case 5:\n            _await$Facebook$logIn = _context2.sent;\n            type = _await$Facebook$logIn.type;\n            token = _await$Facebook$logIn.token;\n\n            if (!(type === \"success\")) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?fields=id,name,picture.type(large),email&access_token=\" + token));\n\n          case 11:\n            response = _context2.sent;\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 14:\n            data = _context2.sent;\n            setUser(data);\n            _context2.next = 18;\n            break;\n\n          case 18:\n            _context2.next = 24;\n            break;\n\n          case 20:\n            _context2.prev = 20;\n            _context2.t0 = _context2[\"catch\"](0);\n            message = _context2.t0.message;\n            alert(\"Facebook Login Error: \" + message);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 20]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.isBackgroundGeneral\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonGmail,\n    onPress: signInGoogle\n  }, React.createElement(Text, null, \" \", React.createElement(Icon, {\n    name: \"google\",\n    size: 25\n  }), \" Entrar com o Gmail\")), React.createElement(View, {\n    style: styles.container\n  }, user ? React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    }\n  }, \" Home \")) : React.createElement(Button, {\n    title: \"Login com facebook\",\n    onPress: signUpFacebook\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Cadastro');\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    }\n  }, \" Tela Cadastro \")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\"\n    }\n  }, \" Tela Home \")));\n}","map":{"version":3,"sources":["/home/italo/Projetao-IFAL-2021/App/src/Screens/Login/index.js"],"names":["React","useState","styles","Icon","Facebook","Google","Login","navigation","user","setUser","signInGoogle","logInAsync","androidClientId","type","navigate","console","error","signUpFacebook","initializeAsync","logInWithReadPermissionsAsync","permissions","token","fetch","response","json","data","message","alert","isBackgroundGeneral","buttonGmail","container","button","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { styles } from './style.js';\nimport { View, Text, TouchableOpacity, Button } from 'react-native';\nimport Icon from 'react-native-vector-icons/Fontisto';\n\nimport * as Facebook from \"expo-facebook\";\n\nimport * as Google from 'expo-google-app-auth';\n\nexport function Login({navigation}) {\n  const [user, setUser] = useState(null);\n\n  const signInGoogle = async() => {\n    try {\n      const { type, user } = await Google.logInAsync({\n        androidClientId: `153675377851-fh50uhfel6np8031hhj2of0g8bs7o71f.apps.googleusercontent.com`\n      });\n\n      if(type === 'success') {\n        navigation.navigate(\"Home\", { user });\n      }\n    } catch(error) {\n      console.error('Verifique o erro e tente novamente', error);\n    }\n  };\n\n  const signUpFacebook = async () => {\n    try {\n      await Facebook.initializeAsync(\"651857032664740\");\n      const { type, token } = await Facebook.logInWithReadPermissionsAsync({\n        permissions: [\"public_profile\", \"email\"],\n      });\n      if (type === \"success\") {\n        // Get the user's name using Facebook's Graph API\n        const response = await fetch(\n          //`https://graph.facebook.com/me?access_token=${token}`\n          `https://graph.facebook.com/me?fields=id,name,picture.type(large),email&access_token=${token}`\n        );\n        // console.log((await response.json()).name);\n        const data = await response.json();\n        setUser(data);\n      } else {\n        // type === 'cancel'\n      }\n    } catch ({ message }) {\n      alert(`Facebook Login Error: ${message}`);\n    }\n  };\n\n\n  return (\n    <View style={styles.isBackgroundGeneral}>\n    \n\n    <TouchableOpacity style={styles.buttonGmail} onPress={signInGoogle}> \n    <Text> <Icon name=\"google\" size={25} /> Entrar com o Gmail</Text>\n    </TouchableOpacity>\n\n    <View style={styles.container}>\n      {user ? (\n        <TouchableOpacity style={styles.button} onPress={()=>navigation.navigate('Home')}>\n          <Text style={{color:\"#fff\"}}> Home </Text>\n        </TouchableOpacity>\n      ) : (\n        <Button title=\"Login com facebook\" onPress={signUpFacebook} />\n      )}\n    </View>\n\n    <TouchableOpacity style={styles.button} onPress={()=>navigation.navigate('Cadastro')}>\n        <Text style={{color:\"#fff\"}}> Tela Cadastro </Text>\n    </TouchableOpacity>\n\n    <TouchableOpacity style={styles.button} onPress={()=>navigation.navigate('Home')}>\n        <Text style={{color:\"#fff\"}}> Tela Home </Text>\n    </TouchableOpacity>\n\n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}