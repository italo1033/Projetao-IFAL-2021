{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport deepMap from \"./deep-map\";\nvar validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\n\nvar scaleByAnnotation = function scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale) {\n  return function (value) {\n    if (!validScaleSheetRegex.test(value)) {\n      return value;\n    }\n\n    var regexExecResult = validScaleSheetRegex.exec(value);\n    var size = parseFloat(regexExecResult[1]);\n    var scaleFunc = regexExecResult[2];\n    var scaleFactor = regexExecResult[3];\n    if (scaleFactor) scaleFunc = scaleFunc.slice(0, -scaleFactor.length);\n    var shouldRound = value.endsWith('r');\n    var result;\n\n    switch (scaleFunc) {\n      case 's':\n        result = scale(size);\n        break;\n\n      case 'vs':\n        result = verticalScale(size);\n        break;\n\n      case 'ms':\n        result = moderateScale(size, scaleFactor);\n        break;\n\n      case 'mvs':\n        result = moderateVerticalScale(size, scaleFactor);\n        break;\n    }\n\n    return shouldRound ? Math.round(result) : result;\n  };\n};\n\nvar scaledSheetCreator = function scaledSheetCreator(scale, verticalScale, moderateScale, moderateVerticalScale) {\n  var scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\n  return {\n    create: function create(styleSheet) {\n      return StyleSheet.create(deepMap(styleSheet, scaleFunc));\n    }\n  };\n};\n\nexport default scaledSheetCreator;","map":{"version":3,"sources":["C:/Users/kenys/Desktop/testepro1/Projetao-IFAL-2021/App/node_modules/react-native-size-matters/lib/ScaledSheet.js"],"names":["deepMap","validScaleSheetRegex","scaleByAnnotation","scale","verticalScale","moderateScale","moderateVerticalScale","value","test","regexExecResult","exec","size","parseFloat","scaleFunc","scaleFactor","slice","length","shouldRound","endsWith","result","Math","round","scaledSheetCreator","create","styleSheet","StyleSheet"],"mappings":";AACA,OAAOA,OAAP;AAIA,IAAMC,oBAAoB,GAAG,4DAA7B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,qBAAtC;AAAA,SAAgE,UAACC,KAAD,EAAW;AACjG,QAAI,CAACN,oBAAoB,CAACO,IAArB,CAA0BD,KAA1B,CAAL,EAAuC;AACnC,aAAOA,KAAP;AACH;;AAED,QAAME,eAAe,GAAGR,oBAAoB,CAACS,IAArB,CAA0BH,KAA1B,CAAxB;AAEA,QAAMI,IAAI,GAAGC,UAAU,CAACH,eAAe,CAAC,CAAD,CAAhB,CAAvB;AACA,QAAII,SAAS,GAAGJ,eAAe,CAAC,CAAD,CAA/B;AACA,QAAMK,WAAW,GAAGL,eAAe,CAAC,CAAD,CAAnC;AAEA,QAAIK,WAAJ,EACID,SAAS,GAAGA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,CAAED,WAAW,CAACE,MAAjC,CAAZ;AAEJ,QAAMC,WAAW,GAAGV,KAAK,CAACW,QAAN,CAAe,GAAf,CAApB;AAEA,QAAIC,MAAJ;;AAEA,YAAQN,SAAR;AACI,WAAK,GAAL;AACIM,QAAAA,MAAM,GAAGhB,KAAK,CAACQ,IAAD,CAAd;AACA;;AACJ,WAAK,IAAL;AACIQ,QAAAA,MAAM,GAAGf,aAAa,CAACO,IAAD,CAAtB;AACA;;AACJ,WAAK,IAAL;AACIQ,QAAAA,MAAM,GAAGd,aAAa,CAACM,IAAD,EAAOG,WAAP,CAAtB;AACA;;AACJ,WAAK,KAAL;AACIK,QAAAA,MAAM,GAAGb,qBAAqB,CAACK,IAAD,EAAOG,WAAP,CAA9B;AACA;AAZR;;AAeA,WAAOG,WAAW,GAAGG,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAH,GAAwBA,MAA1C;AACH,GAlCyB;AAAA,CAA1B;;AAoCA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACnB,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,qBAAtC,EAAgE;AACvF,MAAMO,SAAS,GAAGX,iBAAiB,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,qBAAtC,CAAnC;AACA,SAAO;AACHiB,IAAAA,MAAM,EAAE,gBAAAC,UAAU;AAAA,aAAIC,UAAU,CAACF,MAAX,CAAkBvB,OAAO,CAACwB,UAAD,EAAaX,SAAb,CAAzB,CAAJ;AAAA;AADf,GAAP;AAGH,CALD;;AAOA,eAAeS,kBAAf","sourcesContent":["import { StyleSheet } from 'react-native';\r\nimport deepMap from './deep-map';\r\n\r\n// Groups                     Size                   Func Factor\r\n//                             1                      2    3\r\nconst validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\r\n\r\nconst scaleByAnnotation = (scale, verticalScale, moderateScale, moderateVerticalScale) => (value) => {\r\n    if (!validScaleSheetRegex.test(value)) {\r\n        return value;\r\n    }\r\n\r\n    const regexExecResult = validScaleSheetRegex.exec(value);\r\n\r\n    const size = parseFloat(regexExecResult[1]);\r\n    let scaleFunc = regexExecResult[2];\r\n    const scaleFactor = regexExecResult[3]; // string or undefined\r\n\r\n    if (scaleFactor)\r\n        scaleFunc = scaleFunc.slice(0, - scaleFactor.length); // Remove the factor from it\r\n\r\n    const shouldRound = value.endsWith('r');\r\n\r\n    let result;\r\n\r\n    switch (scaleFunc) {\r\n        case 's':\r\n            result = scale(size);\r\n            break;\r\n        case 'vs':\r\n            result = verticalScale(size);\r\n            break;\r\n        case 'ms':\r\n            result = moderateScale(size, scaleFactor);\r\n            break;\r\n        case 'mvs':\r\n            result = moderateVerticalScale(size, scaleFactor);\r\n            break;\r\n    }\r\n\r\n    return shouldRound ? Math.round(result) : result;\r\n};\r\n\r\nconst scaledSheetCreator = (scale, verticalScale, moderateScale, moderateVerticalScale) => {\r\n    const scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\r\n    return {\r\n        create: styleSheet => StyleSheet.create(deepMap(styleSheet, scaleFunc))\r\n    };\r\n};\r\n\r\nexport default scaledSheetCreator;"]},"metadata":{},"sourceType":"module"}