{"ast":null,"code":"'use strict';\n\nfunction ZStream() {\n  this.input = null;\n  this.next_in = 0;\n  this.avail_in = 0;\n  this.total_in = 0;\n  this.output = null;\n  this.next_out = 0;\n  this.avail_out = 0;\n  this.total_out = 0;\n  this.msg = '';\n  this.state = null;\n  this.data_type = 2;\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;","map":{"version":3,"sources":["/usr/lib/node_modules/expo-cli/node_modules/pako/lib/zlib/zstream.js"],"names":["ZStream","input","next_in","avail_in","total_in","output","next_out","avail_out","total_out","msg","state","data_type","adler","module","exports"],"mappings":"AAAA;;AAqBA,SAASA,OAAT,GAAmB;AAEjB,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,OAAL,GAAe,CAAf;AAEA,OAAKC,QAAL,GAAgB,CAAhB;AAEA,OAAKC,QAAL,GAAgB,CAAhB;AAEA,OAAKC,MAAL,GAAc,IAAd;AACA,OAAKC,QAAL,GAAgB,CAAhB;AAEA,OAAKC,SAAL,GAAiB,CAAjB;AAEA,OAAKC,SAAL,GAAiB,CAAjB;AAEA,OAAKC,GAAL,GAAW,EAAX;AAEA,OAAKC,KAAL,GAAa,IAAb;AAEA,OAAKC,SAAL,GAAiB,CAAjB;AAEA,OAAKC,KAAL,GAAa,CAAb;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBd,OAAjB","sourcesContent":["'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n"]},"metadata":{},"sourceType":"script"}